{"version":3,"sources":["components/Message/Message.js","components/Send/Send.js","components/User/User.js","components/Chat/Chat.js","index.js"],"names":["Message","_ref","item","react_default","a","createElement","className","user","text","Send","value","onChange","onSend","onSubmit","type","User","users","Object","keys","map","id","key","Chat","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setListeners","socket","io","on","emit","state","currentUser","data","isLogin","addMessage","addUsers","changeMessage","event","setState","inputMsg","target","validName","inputName","div","current","messages","concat","toConsumableArray","name","message","sendMessage","preventDefault","_this$state","trim","length","React","createRef","_this$state2","react","components_Message_Message","components_Send_Send","components_User_User","ref","defaultValue","onClick","Component","ReactDOM","render","components_Chat_Chat","document","getElementById"],"mappings":"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","file":"static/js/main.cb4688fa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Message.css\";\n\nconst Message = ({item}) => (\n  <div className=\"message-container\">\n    <span className=\"message\">{item.user}</span>\n    <span className=\"message end\">{item.text}</span>\n  </div>\n)\nexport default Message;","import React from \"react\";\nimport \"./Send.css\";\n\nconst Send = ({value, onChange, onSend}) => (\n  <form onSubmit={onSend} className=\"send-block\">\n    <input value={value} onChange={onChange} className=\"input-message\"/>\n    <button type=\"submit\" className=\"send\">Send</button>\n  </form>\n)\n\nexport default Send;","import React from 'react';\r\n\r\nconst User = ({ users }) => (\r\n  <ul>\r\n    {Object.keys(users).map(id => (\r\n      <li key={id}>{users.id}</li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default User;\r\n","import React, { Component, Fragment } from 'react';\nimport Message from '../Message';\nimport Send from '../Send';\nimport User from '../User';\nimport io from 'socket.io-client';\nimport './Chat.css';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.div = React.createRef();\n    this.state = {\n      currentUser: 'Anonim',\n      messages: [],\n      inputMsg: '',\n      isLogin: false,\n      users: {},\n    };\n    this.socket = null;\n  }\n  setListeners = () => {\n    this.socket = io('localhost:5000');\n    this.socket.on('connect', () => {\n      this.socket.emit('addUser', this.state.currentUser);\n    });\n    this.socket.on('message', data => {\n      if (this.state.isLogin) this.addMessage(data);\n    });\n    this.socket.on('updateUsers', data => {\n      if (this.state.isLogin) this.addUsers(data);\n    });\n  };\n  changeMessage = event => {\n    this.setState({ inputMsg: event.target.value });\n  };\n  validName = user => {\n    return user !== '' && user !== 'Anonim';\n  };\n  inputName = () => {\n    const user = this.div.current.value;\n    if (this.validName(user)) {\n      this.setState({ currentUser: user, isLogin: true });\n      this.setListeners();\n    }\n  };\n  addMessage = data => {\n    this.setState(({ messages }) => ({\n      inputMsg: '',\n      messages: [...messages, { user: data.name, text: data.message }],\n    }));\n  };\n  sendMessage = event => {\n    event.preventDefault();\n    const { currentUser, inputMsg } = this.state;\n    if (inputMsg.trim().length) {\n      this.socket.emit('message', {\n        name: currentUser,\n        message: inputMsg,\n      });\n      this.setState({ inputMsg: '' });\n    }\n  };\n  render() {\n    const { messages, inputMsg, currentUser, isLogin, users } = this.state;\n    if (!isLogin) {\n      return (\n        <div className=\"login\">\n          <span>Welcome</span>\n          <input ref={this.div} defaultValue={currentUser} />\n          <button onClick={this.inputName}>Ok</button>\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        <div className=\"chat\">\n          <div className=\"message-list\">\n            <div className=\"messages\">\n              {messages.map((item, key) => (\n                <Message item={item} key={key} />\n              ))}\n            </div>\n          </div>\n          <Send\n            value={inputMsg}\n            onChange={this.changeMessage}\n            onSend={this.sendMessage}\n          />\n        </div>\n        <User users={users} />\n      </Fragment>\n    );\n  }\n}\n\nexport default Chat;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Chat from './components/Chat';\n\n\nReactDOM.render(<Chat />, document.getElementById('root'));\n"],"sourceRoot":""}